{"version":3,"sources":["Store.js","components/ItemTable/ItemTable.js","service/ItemService.js","constants.js","components/ItemTable/TableTools.js","components/Modal/Modal.js","layout/Header.js","layout/Home.js","App.js","serviceWorker.js","index.js"],"names":["Store","createContext","initialState","items","loaded","page","search","showModal","modalData","reducer","state","action","type","payload","ItemTable","useContext","dispatch","rowClassName","index","rowGetter","open","rowData","width","height","className","headerHeight","onRowClick","rowCount","length","rowHeight","label","dataKey","flexGrow","URL","ItemService","axios","get","res","id","query","put","delete","TableTools","onClick","itemService","Modal","brand_name","name","price","on_sale","notes","close","handleOnChange","e","target","value","isOpen","onDismiss","aria-label","aria-hidden","Form","Group","controlId","Label","Control","onChange","checked","as","rows","Button","variant","updateItemByID","_id","deleteItemByID","Header","Home","children","App","useEffect","a","getItems","data","fetchItems","Boolean","window","location","hostname","match","ReactDOM","render","props","useReducer","Provider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a812738d.chunk.js","sourcesContent":["import React, { createContext, useReducer } from 'react';\n\nexport const Store = createContext();\n\nconst initialState = {\n  items: [],\n  loaded: false,\n  page: 1,\n  search: '',\n  showModal: false,\n  modalData: {},\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'SET_ITEMS':\n      return { ...state, items: action.payload, loaded: true };\n    case 'SET_LOADED':\n      return { ...state, loaded: action.payload };\n    case 'SET_PAGE':\n      return { ...state, page: action.payload, loaded: false };\n    case 'SET_SEARCH':\n      return { ...state, search: action.payload };\n    case 'SET_MODAL':\n      return {\n        ...state,\n        showModal: action.payload.showModal,\n        modalData: action.payload.modalData,\n      };\n    default:\n      return state;\n  }\n}\n\nexport function StoreProvider(props) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const value = { state, dispatch };\n  return <Store.Provider value={value}>{props.children}</Store.Provider>;\n}\n","import React, { useContext } from 'react';\nimport { Store } from '../../Store';\nimport AutoSizer from 'react-virtualized/dist/commonjs/AutoSizer';\nimport Table, { Column } from 'react-virtualized/dist/commonjs/Table';\nimport Loader from 'react-loader';\nimport 'react-virtualized/styles.css';\n\nconst ItemTable = ({ items }) => {\n  const { state, dispatch } = useContext(Store);\n  const { loaded } = state;\n\n  const rowClassName = ({ index }) => {\n    if (index < 0) {\n      return 'TableRow--header';\n    } else {\n      return index % 2 === 0 ? 'TableRow--even' : 'TableRow--odd';\n    }\n  };\n\n  const rowGetter = ({ index }) => items[index];\n\n  const open = ({ rowData }) => {\n    return dispatch({\n      type: 'SET_MODAL',\n      payload: { showModal: true, modalData: { ...rowData } },\n    });\n  };\n\n  return loaded ? (\n    <AutoSizer>\n      {({ width, height }) => (\n        <Table\n          className=\"ItemTable\"\n          headerHeight={50}\n          height={height}\n          onRowClick={open}\n          rowClassName={rowClassName}\n          rowCount={items.length}\n          rowGetter={rowGetter}\n          rowHeight={50}\n          width={width}\n        >\n          <Column label=\"Brand\" dataKey=\"brand_name\" width={100} flexGrow={1} />\n          <Column label=\"Name\" dataKey=\"name\" width={100} flexGrow={1} />\n          <Column label=\"Price\" dataKey=\"price\" width={100} flexGrow={1} />\n          <Column label=\"On Sale\" dataKey=\"on_sale\" width={100} flexGrow={0} />\n          <Column label=\"Notes\" dataKey=\"notes\" width={100} flexGrow={2} />\n        </Table>\n      )}\n    </AutoSizer>\n  ) : (\n    <Loader />\n  );\n};\n\nexport default ItemTable;\n","import axios from 'axios';\nimport * as Constants from '../constants';\n\nconst URL =\n  process.env.NODE_ENV === 'development'\n    ? Constants.ITEM_API_URL_DEV\n    : Constants.ITEM_API_URL;\n\nexport class ItemService {\n  async getItems(page = 1) {\n    const res = await axios.get(`${URL}`);\n    return res;\n  }\n\n  async findItemByID(id) {\n    const res = await axios.get(`${URL}/${id}`);\n    return res;\n  }\n\n  // Currently out of date.\n  async findItemByText(query) {\n    const res = await axios.get(`${URL}?query=${query}`);\n    return res;\n  }\n\n  async updateItemByID(id, payload) {\n    const res = await axios.put(`${URL}/${id}/update`, payload);\n    return res;\n  }\n\n  async deleteItemByID(id) {\n    const res = await axios.delete(`${URL}/${id}/delete`);\n    return res;\n  }\n}\n","export const ITEM_API_URL = 'https://shopmate-backend-2246.herokuapp.com/items';\nexport const ITEM_API_URL_DEV = 'http://localhost:8000/items';\n","import React, { useContext } from 'react';\nimport { ItemService } from '../../service/ItemService';\nimport { Store } from '../../Store';\n\nconst itemService = new ItemService();\n\nconst TableTools = () => {\n  const { state, dispatch } = useContext(Store);\n  const { search } = state;\n\n  const handleOnChange = ({ target }) => {\n    return dispatch({\n      type: 'SET_SEARCH',\n      payload: target.value,\n    });\n  };\n\n  const handleSearch = async () => {\n    dispatch({\n      type: 'SET_LOADED',\n      payload: false,\n    });\n    if (search !== '') {\n      const res = await itemService.findItemByText(search);\n      return dispatch({\n        type: 'SET_ITEMS',\n        payload: res.data,\n      });\n    } else {\n      return dispatch({\n        type: 'SET_PAGE',\n        payload: 1,\n      });\n    }\n  };\n\n  const handleAdd = () => {\n    return dispatch({\n      type: 'SET_MODAL',\n      payload: { showModal: true, modalData: {} },\n    });\n  };\n\n  return (\n    <div className=\"TableTools\">\n      {/* <input value={search} onChange={handleOnChange} />\n      <button onClick={handleSearch} disabled={!search.trim()}>\n        Search\n      </button> */}\n      <button onClick={handleAdd}>\n        <i className=\"far fa-plus-square\"></i>\n      </button>\n    </div>\n  );\n};\n\nexport default TableTools;\n","import React, { useContext } from 'react';\nimport { Store } from '../../Store';\nimport { Dialog } from '@reach/dialog';\nimport { ItemService } from '../../service/ItemService';\nimport VisuallyHidden from '@reach/visually-hidden';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport '@reach/dialog/styles.css';\n\nconst itemService = new ItemService();\n\nconst Modal = () => {\n  const { state, dispatch } = useContext(Store);\n  const { showModal, modalData } = state;\n  const { brand_name, name, price, on_sale, notes } = modalData;\n\n  const close = () => {\n    return dispatch({\n      type: 'SET_MODAL',\n      payload: { showModal: false, modalData: {} },\n    });\n  };\n\n  const handleOnChange = e => {\n    const { id, value } = e.target;\n    return dispatch({\n      type: 'SET_MODAL',\n      payload: { modalData: { ...modalData, [id]: value } },\n    });\n  };\n\n  const handleOnChangeCheckbox = e => {\n    const { id, checked } = e.target;\n    return dispatch({\n      type: 'SET_MODAL',\n      payload: { modalData: { ...modalData, [id]: checked } },\n    });\n  };\n\n  const handleDelete = () => {\n    itemService.deleteItemByID(modalData._id);\n  };\n\n  const handleSubmit = () => {\n    itemService.updateItemByID(modalData._id, modalData);\n  };\n\n  return (\n    <Dialog isOpen={showModal} onDismiss={close} aria-label=\"Edit item\">\n      <button className=\"close-button\" onClick={close}>\n        <VisuallyHidden>Close</VisuallyHidden>\n        <span aria-hidden>×</span>\n      </button>\n      <Form>\n        <Form.Group controlId=\"brand_name\">\n          <Form.Label>Brand Name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            value={brand_name}\n            onChange={handleOnChange}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"name\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control type=\"text\" value={name} onChange={handleOnChange} />\n        </Form.Group>\n        <Form.Group controlId=\"price\">\n          <Form.Label>Price</Form.Label>\n          <Form.Control type=\"number\" value={price} onChange={handleOnChange} />\n        </Form.Group>\n        <Form.Group controlId=\"on_sale\">\n          <Form.Label>On Sale</Form.Label>\n          <Form.Control\n            type=\"checkbox\"\n            checked={on_sale}\n            onChange={handleOnChangeCheckbox}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"notes\">\n          <Form.Label>Notes</Form.Label>\n          <Form.Control\n            as=\"textarea\"\n            rows=\"3\"\n            value={notes}\n            onChange={handleOnChange}\n          />\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\" onClick={handleSubmit}>\n          Submit\n        </Button>\n        {modalData._id && (\n          <Button variant=\"danger\" type=\"submit\" onClick={handleDelete}>\n            Delete\n          </Button>\n        )}\n      </Form>\n    </Dialog>\n  );\n};\n\nexport default Modal;\n","import React, { Fragment } from 'react';\nimport { TableTools } from '../components';\n\nconst Header = () => {\n  return (\n    <Fragment>\n      <header className=\"Header\">\n        <h1>shopmate</h1>\n      </header>\n      <TableTools />\n    </Fragment>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport Header from './Header';\n\nconst Home = ({ children }) => {\n  return (\n    <div className=\"Home\">\n      <Header />\n      <div className=\"Table\">{children}</div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useContext } from 'react';\nimport { ItemTable, Modal } from './components';\nimport { ItemService } from './service/ItemService';\nimport { Home } from './layout';\nimport { Store } from './Store';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.scss';\n\nconst itemService = new ItemService();\n\nfunction App() {\n  const { state, dispatch } = useContext(Store);\n  const { items, page } = state;\n\n  useEffect(() => {\n    const fetchItems = async page => {\n      const data = await itemService.getItems(page);\n      return dispatch({\n        type: 'SET_ITEMS',\n        payload: data.data,\n      });\n    };\n\n    fetchItems(page);\n  }, [dispatch, page]);\n\n  return (\n    <div className=\"App\">\n      <Home>\n        <ItemTable items={items} />\n        <Modal />\n      </Home>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { StoreProvider } from './Store';\nimport * as serviceWorker from './serviceWorker';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nReactDOM.render(\n  <StoreProvider>\n    <App />\n  </StoreProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}